AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  youtube-uploader

  A Lambda function that uploads video files from S3 to YouTube

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 900
    MemorySize: 1024

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment (dev or prod)

Conditions:
  IsProd: !Equals [!Ref Environment, 'prod']

Resources:
  YouTubeUploaderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: uploader_lambda/
      Architectures:
        - x86_64
      PackageType: Image
      Policies:
        - S3ReadPolicy:
            BucketName: !If [IsProd, 'tennisbuddies-club-prod', 'tennisbuddies-club']
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Sub 'arn:aws:secretsmanager:us-west-1:008082804869:secret:TennisBuddies/YoutubeAPI-cKJ3lH'
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: 'arn:aws:secretsmanager:us-west-1:008082804869:secret:TennisBuddies/WebhookSecret-CfK4H6'
      Environment:
        Variables:
          S3_BUCKET_NAME: !If [IsProd, 'tennisbuddies-club-prod', 'tennisbuddies-club']
          YOUTUBE_API_SECRET_ID: 'TennisBuddies/YoutubeAPI'
          AWS_SECRETS_MANAGER_REGION: 'us-west-1'
          WEBHOOK_SECRET_ID: 'TennisBuddies/WebhookSecret'
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./uploader_lambda
      DockerTag: python3.9-v1

Outputs:
  YouTubeUploaderFunction:
    Description: "YouTube Uploader Lambda Function ARN"
    Value: !GetAtt YouTubeUploaderFunction.Arn
  YouTubeUploaderFunctionIamRole:
    Description: "Implicit IAM Role created for YouTube Uploader function"
    Value: !GetAtt YouTubeUploaderFunctionRole.Arn
